func main() {
	myApp := app.New()
	myApp.Settings().SetTheme(&myTheme{Theme: theme.DefaultTheme()})
	
	myWindow := myApp.NewWindow("Archimedes Pi")
	myWindow.Resize(fyne.NewSize(1900, 1600)) // Adjust to 2065x1350 for your app

	// Button to trigger the function
	button := widget.NewButton("Calculate Pi", nil) // ::: dont have this, but ok



	// Label for output
	outputLabel := widget.NewLabel("Press the button to start...\n") // ::: have this top of left button
	outputLabel.Wrapping = fyne.TextWrapWord

	// Scrollable container for the label
	scrollContainer := container.NewScroll(outputLabel)
	scrollContainer.SetMinSize(fyne.NewSize(1900, 1300)) // Set a fixed height, adjust as needed // ::: have it

	// Vertical layout: button on top, scrollable output below // ::: MISSING THIS ------------------
	content := container.New(layout.NewVBoxLayout(), button, scrollContainer)

	// Fyne printing callback function to append output to scrollContainer and also print to terminal // ::: have it
	var outputText string
	callBkPrn2canvas := func(oneLineSansCR string) { // Is this a callback func ???
		outputText += oneLineSansCR + "\n"
		outputLabel.SetText(outputText)
		fmt.Println(oneLineSansCR)                // Keep CLI output (print to terminal)
		scrollContainer.ScrollToBottom() // Auto-scroll to the latest output
	}




	// Button click handler // ::: MISSING ----------------------
	button.OnTapped = func() { // ::: MISSING -----------------------
		outputText = "" // Reset output // ::: have and working !!!!!!!!!!!!
		outputLabel.SetText(outputText) // :::  "    "    "
		go ArchimedesBig(callBkPrn2canvas) // ::: Run  "   "
	}

	myWindow.SetContent(content) // ::: missing the content par
	myWindow.ShowAndRun() 
}